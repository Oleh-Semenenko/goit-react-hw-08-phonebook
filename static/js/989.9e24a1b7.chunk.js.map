{"version":3,"file":"static/js/989.9e24a1b7.chunk.js","mappings":"8PAGaA,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OACE,SAAC,KAAD,CAAKC,GAAI,EAAT,UACE,UAAC,IAAD,CAAOC,OAAO,QAAQC,aAAc,EAApC,WACE,SAAC,IAAD,KACA,SAAC,IAAD,UAAmBH,QAI1B,E,4DCCYI,EAAY,WACvB,IAAMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAWC,EAAAA,EAAAA,MAejB,OACE,UAAC,KAAD,CACEC,GAAG,OACHC,MAAO,IACPC,GAAG,OACHC,SAlBiB,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAEfT,GACEU,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGrCL,EAAKO,OACN,EAQGC,UAAU,SALZ,UAOGrB,IAAS,SAACN,EAAD,CAAcC,QAAQ,+BAChC,UAAC,KAAD,CAAa2B,YAAU,EAACC,GAAG,OAA3B,WACE,SAAC,IAAD,qBACA,SAAC,EAAAC,EAAD,CACEC,KAAK,QACLC,KAAK,QACLC,YAAY,UACZC,YAAY,MACZC,GAAG,aAGP,UAAC,KAAD,CAAaP,YAAU,EAAvB,WACE,SAAC,IAAD,wBACA,SAAC,EAAAE,EAAD,CACEC,KAAK,WACLC,KAAK,WACLC,YAAY,UACZC,YAAY,MACZC,GAAG,aAGP,SAAC,IAAD,CACEJ,KAAK,SACLjB,MAAM,QACNsB,GAAI,EACJH,YAAY,UACZC,YAAY,MACZG,OAAQ,CAAEF,GAAI,UAAWF,YAAa,cAAeK,MAAO,QAN9D,SAQG7B,GACC,SAAC,IAAD,CAAkB8B,iBAAe,EAACC,KAAK,OAAOF,MAAM,YAEpD,aAKT,E,UCzEc,SAASG,IACtB,OACE,SAAC,KAAD,CAAK5B,GAAG,OAAO6B,SAAS,OAAOP,GAAG,UAAUQ,EAAE,QAA9C,UACE,SAAC,IAAD,CAAW9B,GAAG,UAAd,UACE,SAACR,EAAD,OAIP,C","sources":["components/ErrorMessage/ErrorMessage.js","components/LoginForm/LoginForm.js","pages/Login/Login.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Box, Alert, AlertIcon, AlertDescription } from '@chakra-ui/react';\n\nexport const ErrorMessage = ({ message }) => {\n  return (\n    <Box my={4}>\n      <Alert status=\"error\" borderRadius={4}>\n        <AlertIcon />\n        <AlertDescription>{message}</AlertDescription>\n      </Alert>\n    </Box>\n  );\n};\n\nErrorMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { ErrorMessage } from 'components/ErrorMessage/ErrorMessage';\nimport {\n  Box,\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  CircularProgress,\n} from '@chakra-ui/react';\nimport { selectError, selectIsLoading } from 'redux/auth/selectors';\n\nexport const LoginForm = () => {\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Box\n      as=\"form\"\n      width={400}\n      mx=\"auto\"\n      onSubmit={handleSubmit}\n      textAlign=\"center\"\n    >\n      {error && <ErrorMessage message=\"Invalid email or password\" />}\n      <FormControl isRequired mb=\"16px\">\n        <FormLabel>Email</FormLabel>\n        <Input\n          type=\"email\"\n          name=\"email\"\n          borderColor=\"#188C69\"\n          borderWidth=\"1px\"\n          bg=\"#fff\"\n        />\n      </FormControl>\n      <FormControl isRequired>\n        <FormLabel>Password</FormLabel>\n        <Input\n          type=\"password\"\n          name=\"password\"\n          borderColor=\"#188C69\"\n          borderWidth=\"1px\"\n          bg=\"#fff\"\n        />\n      </FormControl>\n      <Button\n        type=\"submit\"\n        width=\"200px\"\n        mt={4}\n        borderColor=\"#188C69\"\n        borderWidth=\"1px\"\n        _hover={{ bg: '#188C69', borderColor: 'transparent', color: '#fff' }}\n      >\n        {isLoading ? (\n          <CircularProgress isIndeterminate size=\"24px\" color=\"#188C69\" />\n        ) : (\n          'Log in'\n        )}\n      </Button>\n    </Box>\n  );\n};\n","import { LoginForm } from '../../components/LoginForm/LoginForm';\nimport { Box, Container } from '@chakra-ui/react';\n\nexport default function Login() {\n  return (\n    <Box as=\"main\" paddingY=\"50px\" bg=\"#F1F1F1\" h=\"100vh\">\n      <Container as=\"section\">\n        <LoginForm />\n      </Container>\n    </Box>\n  );\n}\n"],"names":["ErrorMessage","message","my","status","borderRadius","LoginForm","error","useSelector","selectError","isLoading","selectIsLoading","dispatch","useDispatch","as","width","mx","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","reset","textAlign","isRequired","mb","I","type","name","borderColor","borderWidth","bg","mt","_hover","color","isIndeterminate","size","Login","paddingY","h"],"sourceRoot":""}