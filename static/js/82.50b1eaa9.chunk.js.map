{"version":3,"file":"static/js/82.50b1eaa9.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Contact/Contact.styled.js","components/Contact/Contact.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.js"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectFilter, selectContacts],\n  (filter, contacts) => {\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n\n    return filteredContacts.sort(function (a, b) {\n      return b.id - a.id;\n    });\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 15px 20px;\n  border: 1px solid grey;\n`;\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n`;\n\nexport const Input = styled.input`\n    width: 300px;\n`\n\nexport const Button = styled.button`\n  width: 150px;\n  border-radius: 16px;\n  padding: 6px 10px;\n  border: none;\n  cursor: pointer;\n  :hover {\n    background-color: #4287f5;\n    color: #fff;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts) \n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    const newContact = contacts.find(contact => contact.name === name);\n    if (newContact) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({name, number}));\n    setName('')\n    setNumber('')\n\n    form.reset();\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        <span>Name</span>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          onChange={handleChange}\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n\n      <Label>\n        <span>Number</span>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          onChange={handleChange}\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactItem = styled.li``;\n\nexport const Text = styled.span`\n  margin-right: 10px;\n  font-size: 20px;\n`;\n\nexport const DeleteBtn = styled.button`\n  border-radius: 10px;\n  border: none;\n  font-size: 16px;\n  padding: 4px 10px;\n  cursor: pointer;\n  :hover {\n    background-color: #4287f5;\n    color: #fff;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { ContactItem, Text, DeleteBtn } from './Contact.styled';\nimport PropTypes from 'prop-types';\n\nexport const Contact = ({ id, name, phone }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id))\n\n  return (\n    <ContactItem>\n      <Text>{name}:</Text>\n      <Text>{phone}</Text>\n      <DeleteBtn type=\"button\" onClick={handleDelete}>\n        Delete\n      </DeleteBtn>\n    </ContactItem>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n}\n","import styled from '@emotion/styled';\n\nexport const Contacts = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding-left: 15px;\n\n`;\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { Contact } from 'components/Contact/Contact';\nimport { Contacts } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <Contacts>\n      {contacts.map(({ id, name, phone }) => {\n        return <Contact key={id} id={id} name={name} phone={phone} />;\n      })}\n    </Contacts>\n  );\n};\n\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n    font-size: 20px;\n`\n\nexport const FilterInput = styled.input`\n    margin-left: 10px;\n`","import { useDispatch } from 'react-redux';\nimport { FilterLabel, FilterInput } from './Filter.styled';\nimport { setFilterValue } from 'redux/contacts/filterSlice';\n\n export const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const value = event.currentTarget.value;\n    dispatch(setFilterValue(value));\n  }\n  \n  return (\n    <FilterLabel>\n      Find contacts by name:\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleChange}\n      />\n    </FilterLabel>\n  );\n};","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  max-width: 500px;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n`;\n\nexport const SecondaryTitle = styled.h2`\n  font-size: 24px;\n`;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Container, Title, SecondaryTitle } from './Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <SecondaryTitle>Contacts</SecondaryTitle>\n      <Filter />\n      {isLoading && !error && <p>Request in progress....</p>}\n      {error && <p>Something goes wrong</p>}\n      <ContactList />\n    </Container>\n  );\n}\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","filter","normalizedFilter","toLowerCase","contact","includes","sort","id","Form","styled","Label","Input","Button","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","event","target","onSubmit","preventDefault","form","elements","alert","addContact","reset","type","onChange","pattern","title","required","ContactItem","Text","DeleteBtn","Contact","phone","onClick","deleteContact","Contacts","ContactList","FilterLabel","FilterInput","Filter","currentTarget","setFilterValue","Container","Title","SecondaryTitle","useEffect","fetchContacts"],"sourceRoot":""}